[{"path":"https://tobiste.github.io/geoprofiler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 geoprofiler authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"1. Distances Along Oriented Profiles","text":"can use spatial data can converted sf object. shape file example, simply import R using function tutorial use quakes dataset (R’s {datasets} package) giving locations 1000 seismic events MB > 4.0. events occurred cube near Fiji since 1964.  Transform dataset projected coordinate reference system deal units m, km, miles etc. Otherwise units degrees.","code":"my_data <- sf::read_sf(\"path/to/my/file.shp\") data(\"quakes\") crs <- st_crs(\"EPSG:3460\") # coordinate reference system for projection  # Convert to sf object and transform to  projected coordinates quakes_sf <- st_as_sf(quakes, coords = c(\"long\", \"lat\"), crs = \"WGS84\") |>   st_transform(crs = crs)  quake_map <- ggplot() +   geom_sf(aes(color = depth, size = mag), data = quakes_sf) +   scale_x_continuous(breaks = seq(-360, 360, 5)) +   scale_size_binned()  quake_map"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"define-a-profile","dir":"Articles","previous_headings":"","what":"Define a profile","title":"1. Distances Along Oriented Profiles","text":"several ways define profile, depending known relevant.","code":""},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"profile-from-two-known-points","dir":"Articles","previous_headings":"Define a profile","what":"Profile from two known points","title":"1. Distances Along Oriented Profiles","text":"example, profile line connecting two points: Combine two points line add profile line map:","code":"profile_pts <- data.frame(lon = c(160, -170), lat = c(-15, -24)) |>   st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |> # convert to sf object   st_transform(crs = crs) # transform to projected coordinates profile_l <- profile_line(profile_pts)  quake_map +   geom_sf(data = profile_l, lwd = 1) profile_azimuth(profile_l) #> 112.3832 [°] profile_length(profile_l) #> 3336889 [m]"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"profile-from-direction-and-length-from-one-point","dir":"Articles","previous_headings":"Define a profile","what":"Profile from direction and length from one point","title":"1. Distances Along Oriented Profiles","text":", orientation profile relevant, can define profile direction distance one point: Note unit profile.length depends coordinate reference system must degree lon-lat cooridnates m (km, miles, …) otherwise.","code":"data.frame(lon = 160, lat = 15) |>   st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   st_transform(crs = crs) |>   profile_points(profile.azimuth = 112, profile.length = set_units(8000, km)) #> Simple feature collection with 2 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -48308.26 ymin: 210366.1 xmax: 2948544 ymax: 7627837 #> Projected CRS: Fiji 1986 / Fiji Map Grid #>                    geometry #> 1 POINT (-48308.26 7627837) #> 2  POINT (2948544 210366.1)"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"draw-a-profile-line-interactively","dir":"Articles","previous_headings":"Define a profile","what":"Draw a profile line interactively","title":"1. Distances Along Oriented Profiles","text":"can also just define profile clicking drawing points map:","code":"draw_profile(quakes_sf, n = 3)"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"determine-the-distances-along-and-across-the-profile","dir":"Articles","previous_headings":"","what":"Determine the distances along (and across) the profile","title":"1. Distances Along Oriented Profiles","text":"calculate distances along across profile, simply transform data coordinate system profile line: resulting data-frame gives distance along profile (X) distance profile (Y). quick way visualize “transformed” data can achieved plotting axes ::  plot profile line horizontal line (X=0) start point profile coordinates X=0 Y=0.","code":"quakes_profile <- profile_coords(quakes_sf, profile = profile_l) |>   bind_cols(quakes_sf) quakes_profile |>   # divide by 1000 for km:   mutate(X = X / 1000, Y = Y / 1000) |>   ggplot(aes(X, Y, color = depth, size = mag)) +   geom_point() +   geom_hline(yintercept = 0, lwd = 1) +   scale_size_binned() +   scale_x_continuous(breaks = seq(0, 3000, 250)) +   scale_y_continuous(breaks = seq(-3000, 3000, 250)) +   coord_fixed()"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"shifting-the-profile-line","dir":"Articles","previous_headings":"Determine the distances along (and across) the profile","what":"Shifting the profile line","title":"1. Distances Along Oriented Profiles","text":"location profile line can easily shifted desired spot adjusting X Y values transformed data. example, shift profile line “North”, simply subtract desired shift (move “”, need add desired number).","code":"quakes_profile_shifted <- quakes_profile |>   mutate(     X = X / 1000, # in km     Y = (Y / 1000) - 500 # in km and shifted by 500 km to the \"North\"   )  ggplot(quakes_profile_shifted, aes(X, Y, color = depth, size = mag)) +   geom_point() +   geom_hline(yintercept = 0, lwd = 1) +   scale_size_binned() +   scale_x_continuous(breaks = seq(0, 3000, 250)) +   scale_y_continuous(breaks = seq(-3000, 3000, 250)) +   coord_fixed()"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"filtering-the-data","dir":"Articles","previous_headings":"Determine the distances along (and across) the profile","what":"Filtering the data","title":"1. Distances Along Oriented Profiles","text":"plot helps also allows easily make subset data avoid plotting data points far away profile:","code":"quakes_profile_filtered <- filter(   quakes_profile_shifted,   abs(Y) <= 750,   X >= 1600 )"},{"path":"https://tobiste.github.io/geoprofiler/articles/A_Distances.html","id":"plot-data-along-profile","dir":"Articles","previous_headings":"","what":"Plot data along profile","title":"1. Distances Along Oriented Profiles","text":"Finally, plot filtered data profile:  One way show distance profile plot controlling size (/opacity) points. using unfiltered data, show closest points much larger distant points. gives somewhat 3-dimensional look :","code":"ggplot(quakes_profile_filtered, aes(X, depth, color = depth, size = mag)) +   geom_point() +   scale_size_binned(\"Richter Magnitude\") +   scale_y_reverse() +   scale_x_continuous(guide = guide_axis(position = \"top\")) +   labs(x = \"Distance along profile (km)\", y = \"Depth (km)\", color = \"Depth (km)\") quakes_profile_shifted |>   arrange(desc(abs(Y))) |> # sort data to have close datapoints in foreground   ggplot(aes(X, depth, color = mag, size = abs(Y), alpha = abs(Y))) +   geom_point() +   scale_color_viridis_c(\"Richter Magnitude\", option = \"A\") +   scale_size_continuous(\"Distance from profile (km)\", range = c(3, .1)) +   scale_alpha_continuous(\"Distance from profile (km)\", range = c(1, .1)) +   scale_y_reverse() +   scale_x_continuous(guide = guide_axis(position = \"top\")) +   labs(x = \"Distance along profile (km)\", y = \"Depth (km)\") +   coord_cartesian(expand = FALSE)"},{"path":"https://tobiste.github.io/geoprofiler/articles/B_Swath.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"2. Swath Profiles","text":"can use spatial data can converted SpatRast object. GeoTiff example, simply import R using function tutorial use example data set snippet ETOPO dataset.","code":"my_raster <- terra::rast(\"path/to/my/file.tif\") data(\"raster_example\") crs <- \"EPSG:26915\" # coordinate reference system for projection  my_raster <- terra::rast(raster_example, type = \"xyz\", crs = \"WGS84\") |>   terra::project(crs)  elevation_map <- ggplot() +   tidyterra::geom_spatraster(data = my_raster)  elevation_map"},{"path":"https://tobiste.github.io/geoprofiler/articles/B_Swath.html","id":"define-a-profile","dir":"Articles","previous_headings":"","what":"Define a profile","title":"2. Swath Profiles","text":"can define profile direction distance one point:","code":"my_profile <- data.frame(lon = -90.75, lat = 48.61) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   profile_points(     profile.azimuth = 135,     profile.length = units::set_units(16, \"km\"),     crs = sf::st_crs(crs)   ) |>   profile_line()  elevation_map +   geom_sf(data = my_profile, lwd = 1)"},{"path":"https://tobiste.github.io/geoprofiler/articles/B_Swath.html","id":"extract-elevation-along-swath-profile","dir":"Articles","previous_headings":"","what":"Extract elevation along swath profile","title":"2. Swath Profiles","text":"calculate elevation along swath profiles, need two steps: Extract elevation values along array straight lines parallel profile line using swath_profile(). Calculate statistics within swath using swath_stats(). function swath_profile() requires profile line, raster file, amount equally-spaced, parallel lines either side profile line (argument k) distance lines (dist distance (units coordinate reference system). , want k=10 lines sides profile, spaced dist=300 meters: output list contains extracted elevation data also generated swath lines: > Note width swath profile 2k×dist2k \\times \\text{dist}. example, width 10.000 (m). Next, calculate summary statistics elevation across swath, min/max, mean standard deviation using function swath_stats(). can plug length profile specifying parameter profile.length calculating length using function profile_length().","code":"swath <- swath_profile(my_profile, raster = my_raster, k = 5, dist = 1000) elevation_map +   geom_sf(data = swath$lines, lwd = .1) my_swath_profile <- swath_stats(swath, profile.length = profile_length(my_profile))"},{"path":"https://tobiste.github.io/geoprofiler/articles/B_Swath.html","id":"plot-the-swath-profile","dir":"Articles","previous_headings":"","what":"Plot the swath profile","title":"2. Swath Profiles","text":"Finally, can plot elevation along profile add calculated statistics:","code":"ggplot(my_swath_profile, aes(distance, elevation)) +   geom_ribbon(aes(ymin = min, ymax = max), fill = \"grey90\") +   geom_ribbon(aes(ymin = quantile25, ymax = quantile75), fill = \"grey80\") +   # geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd), fill = \"grey60\") +   geom_line(aes(y = median), color = \"darkred\", lwd = 1) +   # geom_line(aes(y = mean), color = \"dodgerblue\", lwd = 1) +   geom_line(lty = 2)"},{"path":"https://tobiste.github.io/geoprofiler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/geoprofiler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan T (2025). geoprofiler: Distance Along Profile. R package version 0.0.2, https://tobiste.github.io/geoprofiler/.","code":"@Manual{,   title = {geoprofiler: Distance Along Profile},   author = {Tobias Stephan},   year = {2025},   note = {R package version 0.0.2},   url = {https://tobiste.github.io/geoprofiler/}, }"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"geoprofiler","dir":"","previous_headings":"","what":"Distance Along Profile","title":"Distance Along Profile","text":"goal geoprofiler get distances along across user-defined profile lines transects. useful variables depend distances.  concept geoprofiler coordinate transformation geo-coordinates “profile coordinates”. coordinates distances along across profile.","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Distance Along Profile","text":"can install development version geoprofiler GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"tobiste/geoprofiler\")"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Distance Along Profile","text":"basic example shows create profile. Import example data transfer sf object: Create profile line two known points: Note: can also create profile line direction via profile_points() Calculate distances points along across profile line: Finally, create profile plot:  example uses quakes dataset giving locations 1000 seismic events MB > 4.0. events occurred cube near Fiji since 1964.","code":"library(geoprofiler) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.3.3 data(quakes) quakes_sf <- sf::st_as_sf(quakes, coords = c(\"long\", \"lat\"), crs = \"WGS84\") profile <- data.frame(lon = c(160, -170), lat = c(-15, -30)) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   sf::st_shift_longitude() |>   profile_line() quakes_profile <- profile_coords(quakes_sf, profile = profile) |>   dplyr::bind_cols(quakes_sf) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `across(.fns = deg2rad)`. #> Caused by warning: #> ! Using `across()` without supplying `.cols` was deprecated in dplyr 1.1.0. #> ℹ Please supply `.cols` instead. ggplot(quakes_profile, aes(X, depth, color = mag, size = abs(Y), alpha = abs(Y))) +   geom_point() +   scale_color_viridis_c(\"Richter magnitude\", option = \"A\") +   scale_size_continuous(bquote(\"Distance from profile (\" * degree * \")\"), range = c(3, .1)) +   scale_alpha_continuous(bquote(\"Distance from profile (\" * degree * \")\"), range = c(1, .1)) +   scale_y_reverse() +   scale_x_continuous(guide = guide_axis(position = \"top\")) +   labs(x = bquote(\"Distance along profile (\" * degree * \")\"), y = \"Depth (km)\") +   theme_classic()"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Distance Along Profile","text":"detailed documentation can found https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Distance Along Profile","text":"Tobias Stephan (tstephan@lakeheadu.ca)","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"feedback-issues-and-contributions","dir":"","previous_headings":"","what":"Feedback, issues, and contributions","title":"Distance Along Profile","text":"welcome feedback, suggestions, issues, contributions! found bug, please file minimal code reproduce issue.","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Distance Along Profile","text":"MIT License","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a profile line or a point to retrieve coordinates — draw","title":"Draw a profile line or a point to retrieve coordinates — draw","text":"Draw profile line point retrieve coordinates","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a profile line or a point to retrieve coordinates — draw","text":"","code":"get_coordinates(x, n = 1, type = \"o\", col = \"#B63679FF\", ...)  draw_profile(x, n = 10, ...)"},{"path":"https://tobiste.github.io/geoprofiler/reference/draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a profile line or a point to retrieve coordinates — draw","text":"x sf object n maximum number points locate.  Valid values start     1. type One \"n\", \"p\", \"l\"     \"o\". \"p\" \"o\" points     plotted; \"l\"  \"o\" joined lines. col color line point ... additional graphics parameters used type != \"n\"     plotting locations.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/geoprofiler.html","id":null,"dir":"Reference","previous_headings":"","what":"library(geoprofiler) — geoprofiler","title":"library(geoprofiler) — geoprofiler","text":"Measures accurate spatial distances along profile specified either two locations orientation. Also provides functions produce swath profiles.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/geoprofiler.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"library(geoprofiler) — geoprofiler","text":"list documented functions may viewed typing help(package=\"geoprofiler\").","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/geoprofiler.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"library(geoprofiler) — geoprofiler","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/line_ends.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract End Points of a Line — line_ends","title":"Extract End Points of a Line — line_ends","text":"Extract End Points Line","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/line_ends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract End Points of a Line — line_ends","text":"","code":"line_ends(x)"},{"path":"https://tobiste.github.io/geoprofiler/reference/line_ends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract End Points of a Line — line_ends","text":"x sf line object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/line_ends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract End Points of a Line — line_ends","text":"sf point object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/line_ends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract End Points of a Line — line_ends","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_line() |>   line_ends() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> Geometry set for 2 features  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 662193.2 ymin: 5378256 xmax: 669264.3 ymax: 5385328 #> Projected CRS: NAD83 / UTM zone 15N #> POINT (662193.2 5385328) #> POINT (669264.3 5378256)"},{"path":"https://tobiste.github.io/geoprofiler/reference/locations_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example sf data set — locations_example","title":"Example sf data set — locations_example","text":"example dataset","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/locations_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example sf data set — locations_example","text":"","code":"data('locations_example')"},{"path":"https://tobiste.github.io/geoprofiler/reference/locations_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example sf data set — locations_example","text":"object class sf","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/locations_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example sf data set — locations_example","text":"","code":"data(\"locations_example\") head(locations_example) #> Simple feature collection with 6 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -90.72175 ymin: 48.53417 xmax: -90.55858 ymax: 48.60387 #> Geodetic CRS:  NAD83 #>        value                   geometry #> 1 0.28888987 POINT (-90.55858 48.60387) #> 2 0.36566163 POINT (-90.69225 48.54615) #> 3 0.70947389 POINT (-90.72175 48.53417) #> 4 0.76371036 POINT (-90.71652 48.53504) #> 5 0.05750697 POINT (-90.71959 48.53431) #> 6 0.31801622 POINT (-90.70994 48.54514)"},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Between Points — point_distance","title":"Distance Between Points — point_distance","text":"uses haversine formula (default) calculate great-circle distance two points, .e., shortest distance earth's surface.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Between Points — point_distance","text":"","code":"point_distance(a, b, ...)"},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Between Points — point_distance","text":"lon, lat coordinate point 1 b lon, lat coordinate point 2 ... parameters passed tectonicr::dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Between Points — point_distance","text":"units object giving distance","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Between Points — point_distance","text":"","code":"berlin <- c(13.4, 52.517) # lon, lat tokyo <- c(139.767, 35.7) # lon, lat point_distance(berlin, tokyo) #> 247.4037 [km]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between Profile Points — profile_azimuth","title":"Azimuth Between Profile Points — profile_azimuth","text":"Azimuth Profile Points","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between Profile Points — profile_azimuth","text":"","code":"profile_azimuth(x)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between Profile Points — profile_azimuth","text":"x sf point object. First point marks start point.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between Profile Points — profile_azimuth","text":"Azimuth units object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Azimuth Between Profile Points — profile_azimuth","text":"two points given, azimuth calculated using triangulation tectonicr package. two points given, azimuth calculated using linear interpolation coordinate reference frame given profile.","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between Profile Points — profile_azimuth","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\")  profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_azimuth() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> 136.7341 [°]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile Coordinates — profile_coords","title":"Profile Coordinates — profile_coords","text":"Project points cross section given starting point direction","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile Coordinates — profile_coords","text":"","code":"profile_coords(x, profile, azimuth = NULL, drop.units = TRUE)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile Coordinates — profile_coords","text":"x 'sf' object profile 'sf' object profile profile's starting point. azimuth numeric. Direction (degrees) emanating starting point. ignored profile contains two points LINESTRING. drop.units logical. Whether return show units .","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile Coordinates — profile_coords","text":"tibble X distance along profile line. Y distance across profile line. (units X Y depend coordinate reference system).","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile Coordinates — profile_coords","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile Coordinates — profile_coords","text":"","code":"data(locations_example) p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_crds <- profile_coords(locations_example, profile = p1, azimuth = 135) head(profile_crds) #> # A tibble: 6 × 2 #>        X        Y #>    <dbl>    <dbl> #> 1 0.0778  0.116   #> 2 0.0450  0.0123  #> 3 0.0369 -0.00996 #> 4 0.0397 -0.00690 #> 5 0.0383 -0.00885 #> 6 0.0335  0.00333  # Plot the transformed coordinates plot(profile_crds)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of Profile — profile_length","title":"Length of Profile — profile_length","text":"Length Profile","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of Profile — profile_length","text":"","code":"profile_length(x, ...)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of Profile — profile_length","text":"x sf line object ... (optional) passed s2::s2_distance()","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of Profile — profile_length","text":"units object coordinate system set.","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of Profile — profile_length","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_line() |>   profile_length() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> 10000 [m]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Points to a Line — profile_line","title":"Combine Points to a Line — profile_line","text":"Combine Points Line","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Points to a Line — profile_line","text":"","code":"profile_line(x)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Points to a Line — profile_line","text":"x sf point object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Points to a Line — profile_line","text":"sf line object","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Points to a Line — profile_line","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_line() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 662193.2 ymin: 5378256 xmax: 669264.3 ymax: 5385328 #> Projected CRS: NAD83 / UTM zone 15N #> LINESTRING (662193.2 5385328, 669264.3 5378256)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile End Point — profile_points","title":"Profile End Point — profile_points","text":"Create end point along profile line starting point defined direction length.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile End Point — profile_points","text":"","code":"profile_points(   start,   profile.azimuth,   profile.length,   crs = st_crs(start),   return.sf = TRUE )"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile End Point — profile_points","text":"start sf point object. profile.azimuth numeric units object. Direction profile degrees numeric. profile.length numeric units object. crs Coordinate reference system. parsed sf::st_crs(). return.sf logical. profile points returned sf object (TRUE, default) object data.frame.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile End Point — profile_points","text":"class depends return.sf.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Profile End Point — profile_points","text":"Use metric values (meters, kilometers, etc) case projected coordinate reference frame, degree geographical coordinate reference frame.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile End Point — profile_points","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = units::set_units(10, \"km\"),   crs = sf::st_crs(\"EPSG:26915\") ) #> Simple feature collection with 2 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 662193.2 ymin: 5378256 xmax: 669264.3 ymax: 5385328 #> Projected CRS: NAD83 / UTM zone 15N #>                   geometry #> 1 POINT (662193.2 5385328) #> 2 POINT (669264.3 5378256)"},{"path":"https://tobiste.github.io/geoprofiler/reference/raster_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example raster data set — raster_example","title":"Example raster data set — raster_example","text":"example dataset","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/raster_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example raster data set — raster_example","text":"","code":"data('raster_example')"},{"path":"https://tobiste.github.io/geoprofiler/reference/raster_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example raster data set — raster_example","text":"object class matrix","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/raster_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example raster data set — raster_example","text":"","code":"data(\"raster_example\") head(raster_example) #>              x        y        z #> [1,] -90.80833 48.60833 443.8938 #> [2,] -90.79167 48.60833 441.6907 #> [3,] -90.77500 48.60833 440.7680 #> [4,] -90.75833 48.60833 435.4758 #> [5,] -90.74167 48.60833 434.6630 #> [6,] -90.72500 48.60833 432.7246"},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Swath Elevation Profile Statistics — swath_profile","title":"Swath Elevation Profile Statistics — swath_profile","text":"Calculate swath-profile values perpendicular straight baseline. distance samples number samples can specified, see arguments k dist. Values swath-profile extracted given raster file, see argument raster. CRS raster points .","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swath Elevation Profile Statistics — swath_profile","text":"","code":"swath_profile(   profile,   raster,   k = 1,   dist,   crs = terra::crs(raster),   method = c(\"bilinear\", \"simple\") )"},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Swath Elevation Profile Statistics — swath_profile","text":"algorithm modified version \"swathR\" Vincent Haburaj (https://github.com/jjvhab/swathR).","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swath Elevation Profile Statistics — swath_profile","text":"profile either sf object matrix(ncol=2, nrow=2) x y coordinates beginning end point baseline; point one row column 1 x coordinates (longitudes) column 2 y coordinates (latitudes) raster Raster file (\"SpatRaster\" object loaded terra::rast()) k integer. number lines side baseline dist numeric. distance lines crs character. coordinate reference system. raster profile transformed CRS. Uses CRS raster default. method character. method extraction raw data, see terra::extract(): default value: \"bilinear\"","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swath Elevation Profile Statistics — swath_profile","text":"list. swath matrix. Statistics raster measured along lines data list numeric vector containing data extracted raster along line lines swath lines \"sf\" objects","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Swath Elevation Profile Statistics — swath_profile","text":"final width swath : \\(2k \\times  \\text{dist}\\).","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swath Elevation Profile Statistics — swath_profile","text":"","code":"# Create a random raster r <- terra::rast(ncol = 10, nrow = 10, xmin = -150, xmax = -80, ymin = 20, ymax = 60, crs = \"WGS84\") terra::values(r) <- runif(terra::ncell(r))  # Create a random profile profile <- data.frame(lon = c(-140, -90), lat = c(55, 25)) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") swath_profile(profile, r, k = 2, dist = 1) #> $swath #>      distance      mean    median  std.dev.       min       max quantile(25) #> [1,]       -2 0.5188714 0.5354328 0.1226090 0.2986234 0.7434251    0.4610370 #> [2,]       -1 0.5193847 0.5047430 0.1157125 0.2986234 0.7434251    0.4610370 #> [3,]        0 0.4861382 0.4843019 0.1315223 0.2613481 0.7434251    0.4053778 #> [4,]        1 0.4729833 0.4900782 0.1175709 0.2613481 0.6733179    0.3944666 #> [5,]        2 0.4590701 0.4745807 0.1073198 0.2613481 0.6733179    0.4035579 #>      quantile(75) #> [1,]    0.5807059 #> [2,]    0.5776294 #> [3,]    0.5411026 #> [4,]    0.5409959 #> [5,]    0.5320362 #>  #> $data #> $data$lyr.1 #>  [1] 0.5367092 0.4990050 0.4435484 0.3726443 0.3382311 0.5542827 0.4785257 #>  [8] 0.2986234 0.6733179 0.6009761 0.5354328 0.6431701 0.5604357 0.5047430 #> [15] 0.7434251 #>  #> $data$lyr.1 #>  [1] 0.5367092 0.4990050 0.4435484 0.3726443 0.4900782 0.5542827 0.4785257 #>  [8] 0.2986234 0.6733179 0.6009761 0.5354328 0.6431701 0.4162889 0.5047430 #> [15] 0.7434251 #>  #> $data$lyr.1 #>  [1] 0.5367092 0.4745807 0.4435484 0.3726443 0.4900782 0.5542827 0.4785257 #>  [8] 0.2986234 0.6733179 0.3514926 0.5354328 0.6431701 0.4162889 0.5047430 #> [15] 0.7434251 0.2613481 #>  #> $data$lyr.1 #>  [1] 0.4745807 0.4435484 0.3726443 0.4900782 0.5542827 0.5465590 0.2986234 #>  [8] 0.6733179 0.3514926 0.5354328 0.6431701 0.4162889 0.5047430 0.5286397 #> [15] 0.2613481 #>  #> $data$lyr.1 #>  [1] 0.4745807 0.4435484 0.4067186 0.4900782 0.5542827 0.5465590 0.2986234 #>  [8] 0.6733179 0.3514926 0.5354328 0.4003972 0.4162889 0.5047430 0.5286397 #> [15] 0.2613481 #>  #>  #> $lines #> Simple feature collection with 5 features and 0 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -141.029 ymin: 23.28501 xmax: -88.97101 ymax: 56.71499 #> Geodetic CRS:  WGS 84 #>                         geometry #> 1 LINESTRING (-138.971 56.714... #> 2 LINESTRING (-139.4855 55.85... #> 3   LINESTRING (-140 55, -90 25) #> 4 LINESTRING (-140.5145 54.14... #> 5 LINESTRING (-141.029 53.285... #>"},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics on Swath Elevation Profile — swath_stats","title":"Summary Statistics on Swath Elevation Profile — swath_stats","text":"Statistics elevation data across swath profile.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics on Swath Elevation Profile — swath_stats","text":"","code":"swath_stats(x, profile.length = NULL)"},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics on Swath Elevation Profile — swath_stats","text":"x list. return object swath_profile() profile.length numeric units object. NULL fractional distance returned, .e. 0 start 1 end profile.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Statistics on Swath Elevation Profile — swath_stats","text":"tibble","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/swath_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Statistics on Swath Elevation Profile — swath_stats","text":"","code":"# Create a random raster r <- terra::rast(ncol = 10, nrow = 10, xmin = -150, xmax = -80, ymin = 20, ymax = 60) terra::values(r) <- runif(terra::ncell(r))  # Create a random profile profile <- data.frame(lon = c(-140, -90), lat = c(55, 25)) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") swath <- swath_profile(profile, r, k = 5, dist = 10) #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf  swath_stats(swath, profile.length = profile_length(profile_line(profile))) #> # A tibble: 16 × 9 #>    distance elevation   min quantile25 median quantile75   max  mean     sd #>         [m]     <dbl> <dbl>      <dbl>  <dbl>      <dbl> <dbl> <dbl>  <dbl> #>  1       0      0.817 0.257      0.257  0.257      0.257 0.817 0.417 0.253  #>  2  349377.     0.718 0.381      0.381  0.487      0.655 0.792 0.575 0.164  #>  3  698755.     0.416 0.332      0.353  0.416      0.624 0.893 0.566 0.223  #>  4 1048132.     0.430 0.408      0.413  0.430      0.519 0.674 0.508 0.107  #>  5 1397509.     0.723 0.368      0.368  0.435      0.558 0.723 0.518 0.137  #>  6 1746887.     0.746 0.299      0.299  0.481      0.705 0.910 0.590 0.239  #>  7 2096264.     0.684 0.452      0.452  0.464      0.522 0.684 0.528 0.0910 #>  8 2445641.     0.676 0.382      0.416  0.517      0.581 0.676 0.535 0.108  #>  9 2795018.     0.287 0.287      0.349  0.536      0.573 0.637 0.502 0.133  #> 10 3144396.     0.770 0.497      0.505  0.530      0.602 0.832 0.614 0.133  #> 11 3493773.     0.722 0.254      0.300  0.439      0.574 0.722 0.490 0.172  #> 12 3843150.     0.495 0.313      0.322  0.350      0.496 0.735 0.461 0.156  #> 13 4192528.     0.487 0.274      0.274  0.381      0.585 0.697 0.484 0.178  #> 14 4541905.     0.370 0.363      0.363  0.363      0.369 0.702 0.449 0.146  #> 15 4891282.     0.482 0.482      0.482  0.482      0.482 0.712 0.548 0.104  #> 16 5240660.     0.502 0.502      0.502  0.502      0.502 0.502 0.502 0"}]
