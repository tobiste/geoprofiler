[{"path":"https://tobiste.github.io/geoprofiler/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 geoprofiler authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"load-example-data","dir":"Articles","previous_headings":"","what":"Load example data","title":"geoprofiler","text":"can use spatial data can converted sf object. shape file example, simply import R using function tutorial use quakes dataset (R’s ’datasets` package) giving locations 1000 seismic events MB > 4.0. events occurred cube near Fiji since 1964. > Transform dataset projected cooridnate reference system deal units m, km, miles etc. Otherwise units degrees.","code":"data(\"quakes\") crs <- st_crs(\"EPSG:3460\")  quakes_sf <- st_as_sf(quakes, coords = c(\"long\", \"lat\"), crs = \"WGS84\") |>   st_transform(crs = crs)   quake_map <- ggplot() +   geom_sf(aes(color = depth, size = mag), data = quakes_sf) +   scale_x_continuous(breaks = seq(-360, 360, 5)) +   scale_size_binned()   quake_map"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"define-a-profile","dir":"Articles","previous_headings":"","what":"Define a profile","title":"geoprofiler","text":"several ways define profile, depending known relevant.","code":""},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"profile-from-two-known-points","dir":"Articles","previous_headings":"Define a profile","what":"Profile from two known points","title":"geoprofiler","text":"example, profile line connecting two points: Combine two points line add profile line map:","code":"profile_pts <- data.frame(lon = c(160, -170), lat = c(-15, -24)) |>   st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   st_transform(crs = crs) profile_l <- profile_line(profile_pts)  quake_map +   geom_sf(data = profile_l, lwd = 1) profile_azimuth(profile_l) #> 112.3832 [°] profile_length(profile_l) #> 3336889 [m]"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"profile-from-direction-and-length-from-one-point","dir":"Articles","previous_headings":"Define a profile","what":"Profile from direction and length from one point","title":"geoprofiler","text":", orientation profile relevant, can define profile direction distance one point: Note unit profile.length depends coordinate reference system must degree lon-lat cooridnates m (km, miles, …) otherwise.","code":"data.frame(lon = 160, lat = 15) |>   st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   st_transform(crs = crs) |>   profile_points(profile.azimuth = 112, profile.length = set_units(8000, km)) #> Simple feature collection with 2 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -48308.26 ymin: 210366.1 xmax: 2948544 ymax: 7627837 #> Projected CRS: Fiji 1986 / Fiji Map Grid #>                    geometry #> 1 POINT (-48308.26 7627837) #> 2  POINT (2948544 210366.1)"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"determine-the-distances-along-and-across-the-profile","dir":"Articles","previous_headings":"","what":"Determine the distances along (and across) the profile","title":"geoprofiler","text":"calculate distances along across profile, simply transform data coordinate system profile line: resulting data-frame gives distance along profile (X) distance profile (Y). quick way visualize “transformed” data can achieved plotting axes :: plot profile line horizontal line (X=0) start point profile coordinates X=0 Y=0.","code":"quakes_profile <- profile_coords(quakes_sf, profile = profile_l) |>   bind_cols(quakes_sf) quakes_profile |>   # divide by 1000 for km:   mutate(X = X/1000, Y = Y / 1000) |>       ggplot(aes(X, Y, color = depth, size = mag)) +    geom_point() +   geom_hline(yintercept = 0, lwd = 1) +   scale_size_binned() +   scale_x_continuous(breaks = seq(0, 3000, 250)) +   scale_y_continuous(breaks = seq(-3000, 3000, 250)) +   coord_fixed()"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"shifting-the-profile-line","dir":"Articles","previous_headings":"Determine the distances along (and across) the profile","what":"Shifting the profile line","title":"geoprofiler","text":"location profile line can easily shifted desired spot adjusting X Y values transformed data. example, shift profile line ‘North’, simply subtract desired shift (move ‘’, need add desired number).","code":"quakes_profile_shifted <- quakes_profile |>    mutate(     X = X/1000, # in km     Y = (Y/1000) - 500 # in km and shifted by 500 km to the \"North\"   )     ggplot(quakes_profile_shifted, aes(X, Y, color = depth, size = mag)) +   geom_point() +   geom_hline(yintercept = 0, lwd = 1) +   scale_size_binned() +   scale_x_continuous(breaks = seq(0, 3000, 250)) +   scale_y_continuous(breaks = seq(-3000, 3000, 250)) +   coord_fixed()"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"filtering-the-data","dir":"Articles","previous_headings":"Determine the distances along (and across) the profile","what":"Filtering the data","title":"geoprofiler","text":"plot helps also allows easily make subset data avoid plotting data points far away profile:","code":"quakes_profile_filtered <- filter(   quakes_profile_shifted,   abs(Y) <= 750,   X >= 1600  )"},{"path":"https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","id":"plot-data-along-profile","dir":"Articles","previous_headings":"","what":"Plot data along profile","title":"geoprofiler","text":"Finally plot filtered data profile:  One way show distance profile plot controlling size (/opacity) points. using unfiltered data, show closest points much larger distant points. gives somewhat 3-dimensional look :","code":"ggplot(quakes_profile_filtered, aes(X, depth, color = depth, size = mag)) +   geom_point() +   scale_size_binned(\"Richter Magnitude\") +   scale_y_reverse() +   scale_x_continuous(guide = guide_axis(position = \"top\")) +   labs(x = \"Distance along profile (km)\", y = \"Depth (km)\", color = \"Depth (km)\") quakes_profile_shifted |>    arrange(desc(abs(Y))) |>    ggplot(aes(X, depth, color = mag, size = abs(Y), alpha = abs(Y))) +    geom_point() +    scale_color_viridis_c(\"Richter Magnitude\", option = \"A\") +    scale_size_continuous(\"Distance from profile (km)\", range = c(3, .1)) +    scale_alpha_continuous(\"Distance from profile (km)\", range = c(1, .1)) +    scale_y_reverse() +    scale_x_continuous(guide = guide_axis(position = \"top\")) +    labs(x = \"Distance along profile (km)\", y = \"Depth (km)\") +    coord_cartesian(expand = FALSE)"},{"path":"https://tobiste.github.io/geoprofiler/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/geoprofiler/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan T (2024). geoprofiler: Distance Along Profile. R package version 0.0.0.9000, https://tobiste.github.io/geoprofiler/.","code":"@Manual{,   title = {geoprofiler: Distance Along Profile},   author = {Tobias Stephan},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://tobiste.github.io/geoprofiler/}, }"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"geoprofiler","dir":"","previous_headings":"","what":"Distance Along Profile","title":"Distance Along Profile","text":"goal geoprofiler get distances along across user-defined profile lines transects. useful variables depend distances. Concept: geoprofiler applies coordinate transformation geo-coordinates “profile coordinates’. coordinates distances along across profile.","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Distance Along Profile","text":"can install development version geoprofiler GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"tobiste/geoprofiler\")"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Distance Along Profile","text":"basic example shows create profile. Import example data transfer sf object: Create profile line two known points: Note: can also create profile line direction via profile_points() Calculate distances points along across profile line: Finally, create profile plot:  example uses quakes dataset giving locations 1000 seismic events MB > 4.0. events occurred cube near Fiji since 1964.","code":"library(geoprofiler) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.3.3 data(quakes) quakes_sf <- sf::st_as_sf(quakes, coords = c(\"long\", \"lat\"), crs = \"WGS84\") profile <- data.frame(lon = c(160, -170), lat = c(-15, -30)) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") |>   sf::st_shift_longitude() |>   profile_line() quakes_profile <- profile_coords(quakes_sf, profile = profile) |>   dplyr::bind_cols(quakes_sf) ggplot(quakes_profile, aes(X, depth, color = mag, size = abs(Y), alpha = abs(Y))) +   geom_point() +   scale_color_viridis_c(\"Richter Magnitude\", option = \"A\") +   scale_size_continuous(bquote(\"Distance from profile (\" * degree * \")\"), range = c(3, .1)) +   scale_alpha_continuous(bquote(\"Distance from profile (\" * degree * \")\"), range = c(1, .1)) +   scale_y_reverse() +   scale_x_continuous(guide = guide_axis(position = \"top\")) +   labs(x = bquote(\"Distance along profile (\" * degree * \")\"), y = \"Depth (km)\") +   theme_classic()"},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Distance Along Profile","text":"detailed documentation can found https://tobiste.github.io/geoprofiler/articles/geoprofiler.html","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Distance Along Profile","text":"Tobias Stephan (tstephan@lakeheadu.ca)","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"feedback-issues-and-contributions","dir":"","previous_headings":"","what":"Feedback, issues, and contributions","title":"Distance Along Profile","text":"welcome feedback, suggestions, issues, contributions! found bug, please file minimal code reproduce issue.","code":""},{"path":"https://tobiste.github.io/geoprofiler/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Distance Along Profile","text":"MIT License","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/geoprofiler-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geoprofiler: Distance Along Profile — geoprofiler-package","title":"geoprofiler: Distance Along Profile — geoprofiler-package","text":"Measures distances along lines defined direction.","code":""},{"path":[]},{"path":"https://tobiste.github.io/geoprofiler/reference/geoprofiler-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geoprofiler: Distance Along Profile — geoprofiler-package","text":"Maintainer: Tobias Stephan tobias.stephan1@yahoo.com (ORCID)","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Between Points — point_distance","title":"Distance Between Points — point_distance","text":"uses haversine formula (default) calculate great-circle distance two points, .e., shortest distance earth's surface.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Between Points — point_distance","text":"","code":"point_distance(a, b, ...)"},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Between Points — point_distance","text":"lon, lat coordinate point 1 b lon, lat coordinate point 2 ... parameters passed tectonicr::dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Between Points — point_distance","text":"units object giving distance","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/point_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Between Points — point_distance","text":"","code":"berlin <- c(52.517, 13.4) tokyo <- c(35.7, 139.767) point_distance(berlin, tokyo) #> 247.3829 [km]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between Profile Points — profile_azimuth","title":"Azimuth Between Profile Points — profile_azimuth","text":"Azimuth Profile Points","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between Profile Points — profile_azimuth","text":"","code":"profile_azimuth(profile)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between Profile Points — profile_azimuth","text":"profile sf point object. First point marks start point.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between Profile Points — profile_azimuth","text":"numeric. Azimuth degrees","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between Profile Points — profile_azimuth","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\")  profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_azimuth() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> 136.7341 [°]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile Coordinates — profile_coords","title":"Profile Coordinates — profile_coords","text":"Project points cross section given starting point direction","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile Coordinates — profile_coords","text":"","code":"profile_coords(x, profile, azimuth = NULL, drop.units = TRUE)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile Coordinates — profile_coords","text":"x 'sf' object profile 'sf' object profile profile's starting point. azimuth numeric. Direction (degrees) emanating starting point. ignored profile contains two points LINESTRING. drop.units logical. Whether return show units .","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile Coordinates — profile_coords","text":"\"tibble\". X distance along profile line. Y distance across profile line. (units X Y depend coordinate reference system).","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Profile Coordinates — profile_coords","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile Coordinates — profile_coords","text":"","code":"data(locations_example) p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_crds <- profile_coords(locations_example, profile = p1, azimuth = 135) head(profile_crds) #> # A tibble: 6 × 2 #>         X         Y #>     <dbl>     <dbl> #> 1 0.00695 -0.00144  #> 2 0.00527  0.000267 #> 3 0.0140   0.00932  #> 4 0.0101   0.00611  #> 5 0.00569 -0.000722 #> 6 0.0398   0.110     # Plot the transformed coordinates plot(profile_crds)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of Profile — profile_length","title":"Length of Profile — profile_length","text":"Length Profile","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of Profile — profile_length","text":"","code":"profile_length(x, ...)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of Profile — profile_length","text":"x sf line object ... (optional) passed s2::s2_distance()","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of Profile — profile_length","text":"units object coordinate system set.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of Profile — profile_length","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_line() |>   profile_length() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> 10000 [m]"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Points to a Line — profile_line","title":"Combine Points to a Line — profile_line","text":"Combine Points Line","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Points to a Line — profile_line","text":"","code":"profile_line(x)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Points to a Line — profile_line","text":"x sf point object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Points to a Line — profile_line","text":"sf line object","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Points to a Line — profile_line","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = 10000,   crs = sf::st_crs(\"EPSG:26915\") ) |>   profile_line() #> Warning: Unit of profile.length not specified. Assuming unit is in meters. #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 662193.2 ymin: 5378256 xmax: 669264.3 ymax: 5385328 #> Projected CRS: NAD83 / UTM zone 15N #> LINESTRING (662193.2 5385328, 669264.3 5378256)"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile End Point — profile_points","title":"Profile End Point — profile_points","text":"Create end point along profile line starting point defined direction length.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile End Point — profile_points","text":"","code":"profile_points(   start,   profile.azimuth,   profile.length,   crs = st_crs(start),   return.sf = TRUE )"},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile End Point — profile_points","text":"start sf point object. profile.azimuth numeric. Direction profile degrees. profile.length units object. crs Coordinate reference system. readable sf::st_crs(). return.sf logical. profile points returned sf object (TRUE, default) object data.frame.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Profile End Point — profile_points","text":"class depends return.sf.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Profile End Point — profile_points","text":"Use metric values (meters, kilometers, etc) case projected coordinate reference frame, degree geographical coordinate reference frame.","code":""},{"path":"https://tobiste.github.io/geoprofiler/reference/profile_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Profile End Point — profile_points","text":"","code":"p1 <- data.frame(lon = -90.8, lat = 48.6) |>   sf::st_as_sf(coords = c(\"lon\", \"lat\"), crs = \"WGS84\") profile_points(p1,   profile.azimuth = 135, profile.length = units::set_units(10, \"km\"),   crs = sf::st_crs(\"EPSG:26915\") ) #> Simple feature collection with 2 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 662193.2 ymin: 5378256 xmax: 669264.3 ymax: 5385328 #> Projected CRS: NAD83 / UTM zone 15N #>                   geometry #> 1 POINT (662193.2 5385328) #> 2 POINT (669264.3 5378256)"}]
